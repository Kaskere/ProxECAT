library(devtools)
setwd("/Users/audreyhendricks/Desktop/CU-Denver/research/Active/complementary information/R package/proxecat/R")
document
document()
document()
library(proxecat)
?proxecat
proxecat(1,2,-3,4)
proxecat_over(1,2,-3,4)
proxecat_over(1,2,-3,4, size=1000)
proxecat_over(1,2,3,4, size=1000)
proxecat_over<-function(x1, x2,x3,x4, size){
if(min(c(x1, x2, x3, x4))<0) {warning(paste("row(s)", paste(which(apply(cbind(x1, x2, x3, x4), 1, min)<0), collapse=","), "contain at least one negative value"))}
size<<-1000
den<-x1+x2+x3+x4
lambda1<-(x1**2+x1*x2+x1*x3+x2*x3)/den
lambda2<-(x2**2+x1*x2+x1*x4+x4*x2)/den
lambda3<-(x3**2+x1*x3+x3*x4+x1*x4)/den
lambda4<-(x4**2+x3*x4+x2*x3+x4*x2)/den
L_const<-dnbinom(round(x1),size=size,mu=lambda1)*dnbinom(round(x2),size=size,mu=lambda2)*dnbinom(round(x3),size=size,mu=lambda3)*dnbinom(round(x4),size=size,mu=lambda4)
L_unconst<-dnbinom(round(x1),size=size,mu=x1)*dnbinom(round(x2),size=size,mu=x2)*dnbinom(round(x3),size=size,mu=x3)*dnbinom(round(x4),size=size,mu=x4)
LRT_all=-2*log(L_const/L_unconst)
}#end of function
proxecat_over(1,2,3,4)
proxecat_over.t<-function(x1, x2,x3,x4, size){
if(min(c(x1, x2, x3, x4))<0) {warning(paste("row(s)", paste(which(apply(cbind(x1, x2, x3, x4), 1, min)<0), collapse=","), "contain at least one negative value"))}
size<<-1000
den<-x1+x2+x3+x4
lambda1<-(x1**2+x1*x2+x1*x3+x2*x3)/den
lambda2<-(x2**2+x1*x2+x1*x4+x4*x2)/den
lambda3<-(x3**2+x1*x3+x3*x4+x1*x4)/den
lambda4<-(x4**2+x3*x4+x2*x3+x4*x2)/den
L_const<-dnbinom(round(x1),size=size,mu=lambda1)*dnbinom(round(x2),size=size,mu=lambda2)*dnbinom(round(x3),size=size,mu=lambda3)*dnbinom(round(x4),size=size,mu=lambda4)
L_unconst<-dnbinom(round(x1),size=size,mu=x1)*dnbinom(round(x2),size=size,mu=x2)*dnbinom(round(x3),size=size,mu=x3)*dnbinom(round(x4),size=size,mu=x4)
LRT_all=-2*log(L_const/L_unconst)
}#end of function
proxecat_over.t(1,2,3,4)
proxecat_over.t<-function(x1, x2,x3,x4, size=1000){
if(min(c(x1, x2, x3, x4))<0) {warning(paste("row(s)", paste(which(apply(cbind(x1, x2, x3, x4), 1, min)<0), collapse=","), "contain at least one negative value"))}
den<-x1+x2+x3+x4
lambda1<-(x1**2+x1*x2+x1*x3+x2*x3)/den
lambda2<-(x2**2+x1*x2+x1*x4+x4*x2)/den
lambda3<-(x3**2+x1*x3+x3*x4+x1*x4)/den
lambda4<-(x4**2+x3*x4+x2*x3+x4*x2)/den
L_const<-dnbinom(round(x1),size=size,mu=lambda1)*dnbinom(round(x2),size=size,mu=lambda2)*dnbinom(round(x3),size=size,mu=lambda3)*dnbinom(round(x4),size=size,mu=lambda4)
L_unconst<-dnbinom(round(x1),size=size,mu=x1)*dnbinom(round(x2),size=size,mu=x2)*dnbinom(round(x3),size=size,mu=x3)*dnbinom(round(x4),size=size,mu=x4)
LRT_all=-2*log(L_const/L_unconst)
}#end of function
proxecat_over.t(1,2,3,4)
proxecat_over.t(1,2,3,4)
proxecat_over.t<-function(x1, x2,x3,x4, size=1000){
if(min(c(x1, x2, x3, x4))<0) {warning(paste("row(s)", paste(which(apply(cbind(x1, x2, x3, x4), 1, min)<0), collapse=","), "contain at least one negative value"))}
den<-x1+x2+x3+x4
lambda1<-(x1**2+x1*x2+x1*x3+x2*x3)/den
lambda2<-(x2**2+x1*x2+x1*x4+x4*x2)/den
lambda3<-(x3**2+x1*x3+x3*x4+x1*x4)/den
lambda4<-(x4**2+x3*x4+x2*x3+x4*x2)/den
L_const<-dnbinom(round(x1),size=size,mu=lambda1)*dnbinom(round(x2),size=size,mu=lambda2)*dnbinom(round(x3),size=size,mu=lambda3)*dnbinom(round(x4),size=size,mu=lambda4)
L_unconst<-dnbinom(round(x1),size=size,mu=x1)*dnbinom(round(x2),size=size,mu=x2)*dnbinom(round(x3),size=size,mu=x3)*dnbinom(round(x4),size=size,mu=x4)
test.statistic <- -2*log(L_const/L_unconst)
p.value <- pchisq(test.statistic, 1, lower.tail=F)
dat<-data.frame(x1=x1, x2=x2, x3=x3, x4=x4)
out<-list(dat = dat, test.statistic = test.statistic, p.value = p.value)
return(out)
}#end of function
proxecat_over.t(1,2,3,4)
proxecat_over.t<-function(x1, x2,x3,x4, size=1000){
if(min(c(x1, x2, x3, x4))<0) {warning(paste("row(s)", paste(which(apply(cbind(x1, x2, x3, x4), 1, min)<0), collapse=","), "contain at least one negative value"))}
den<-x1+x2+x3+x4
lambda1<-(x1**2+x1*x2+x1*x3+x2*x3)/den
lambda2<-(x2**2+x1*x2+x1*x4+x4*x2)/den
lambda3<-(x3**2+x1*x3+x3*x4+x1*x4)/den
lambda4<-(x4**2+x3*x4+x2*x3+x4*x2)/den
L_const<-dnbinom(round(x1),size=size,mu=lambda1)*dnbinom(round(x2),size=size,mu=lambda2)*dnbinom(round(x3),size=size,mu=lambda3)*dnbinom(round(x4),size=size,mu=lambda4)
L_unconst<-dnbinom(round(x1),size=size,mu=x1)*dnbinom(round(x2),size=size,mu=x2)*dnbinom(round(x3),size=size,mu=x3)*dnbinom(round(x4),size=size,mu=x4)
test.statistic <- -2*log(L_const/L_unconst)
p.value <- pchisq(test.statistic, 1, lower.tail=F)
dat<-data.frame(x1=x1, x2=x2, x3=x3, x4=x4, size=size)
out<-list(dat = dat, test.statistic = test.statistic, p.value = p.value)
return(out)
}#end of function
proxecat_over.t(1,2,3,4)
proxecat_over.t(1,2,3,4, size=10)
?proxecat_over
build()
?build
install()
?proxecat_over
proxecat_over(1,2,2,100)
build()
install()
proxecat_over(1,2,2,100)
library(proxecat)
proxecat_over(1,2,2,100)
build()
install()
proxecat_over(1,2,3,1000)
library(proxecat)
proxecat_over(1,2,3,1000)
?proxecat_over
